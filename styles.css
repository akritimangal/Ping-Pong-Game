*,*::after,*::before{
    box-sizing: border-box;

}
/*Custom properties start with "--" followed by a name (in this case, "hue"). 
They are used to store values that can be reused throughout the CSS file.*/
 /*pseudo class selector that selects root element(<html>)*/
:root {
--hue: 150;
--saturation: 70%;
--foreground-color: hsl(var(--hue), var(--saturation), 95%);
--background-color: hsl(var(--hue), var(--saturation), 20%);
}
body{
    margin:0;
    overflow:hidden; /* we dont want ot get scroll bar when ball not in screen*/
    background-color: var(--background-color);
}
.paddle{
    --position:50;
    position:absolute;


    background-color: var( --foreground-color);
    top:calc(var(--position)* 1vh);
    transform:translateY(-50%); 
    width:1vh; /*viewport height*/
    height:10vh;

}
.paddle.left{
    left:1vw;
}
.paddle.right{
    right:1vw;
}

.ball{
    --x:50;
    --y:50;
    position:absolute;


    background-color: var( --foreground-color);
    left:calc(var(--x)*1vw);

    top:calc(var(--y)* 1vh);
    border-radius: 50%;
    transform:translateY(-50%,-50%); 
    width:2.5vh; /*viewport height*/
    height:2.5vh;

}

.score{
    display:flex;
    justify-content: center;
    font-weight:bold;
    font-size:7vh;
    color:var(--foreground-color);
}
/*get every single direct child or selecting all elements in score*/
.score > *{
    flex-grow: 1;
    flex-basis:0; 
    padding:0 2vh;
    margin:1vh 0;
    opacity: .5;    

}
.score>:first-child{
    text-align:right;
    border-right: .7vh solid var(--foreground-color);
}